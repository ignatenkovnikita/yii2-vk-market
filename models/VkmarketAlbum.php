<?php

namespace ignatenkovnikita\vkmarket\models;

use ignatenkovnikita\imagemanager\models\generated\ImageManager;
use voskobovich\linker\LinkerBehavior;
use Yii;
use yii\db\ActiveRecord;

/**
 * This is the model class for table "vkmarket_album".
 *
 * @property integer $id ID
 * @property string $title Title
 * @property integer $main_album Main Album
 * @property integer $vk_id Vk ID
 * @property integer $created_at Created At
 * @property integer $updated_at Updated At
 * @property integer $created_by Created By
 * @property integer $updated_by Updated By
 */
class VkmarketAlbum extends ActiveRecord
{
    const NAME_ATTACHMENT = 'vkmarket.attachment';


    public $attachment;

    public $oldProducts = [];

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'timestamp' => \yii\behaviors\TimestampBehavior::class,
            'author' => \yii\behaviors\BlameableBehavior::class,
            [
                'class' => \ignatenkovnikita\imagemanager\behaviors\UploadBehavior::className(),
                'attribute' => 'attachment',
                'multiple' => false,
                'tag' => self::NAME_ATTACHMENT,
                'uploadRelation' => 'vkmarketAttachment',
                'pathAttribute' => 'path',
                'baseUrlAttribute' => 'base_url',
                'orderAttribute' => 'order',
                'typeAttribute' => 'type',
                'sizeAttribute' => 'size',
                'nameAttribute' => 'name',
//                'filesStorage' => 'fileStorageAws'
            ],
            [
                'class' => LinkerBehavior::className(),
                'relations' => [
                    'product_ids' => 'products',
                ],
            ],
        ];
    }


    public function afterFind()
    {
        $this->oldProducts = $this->getProducts()->select(['id', 'vk_id'])->all();
        parent::afterFind(); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'vkmarket_album';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title', 'attachment'], 'required'],
            [['vk_id', 'created_at', 'updated_at', 'created_by', 'updated_by'], 'integer'],
            [['title'], 'string', 'max' => 255],
            [['main_album'], 'string', 'max' => 1],
            [['product_ids'], 'each', 'rule' => ['integer']],

        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Title',
            'main_album' => 'Main Album',
            'vk_id' => 'Vk ID',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
            'created_by' => 'Created By',
            'updated_by' => 'Updated By',
        ];
    }


    /**
     * @return \yii\db\ActiveQuery
     * @throws \Exception
     */
    public function getVkmarketAttachment()
    {
        return $this->hasOne(ImageManager::class, ['owner_id' => 'id'])->andWhere(['tag' => self::NAME_ATTACHMENT]);
    }

    /** @return \yii\db\ActiveQuery */
    public function getProducts()
    {

        return $this->hasMany(Yii::$app->getModule('vkmarket')->product, ['id' => 'product_id'])
            ->viaTable(VkmarketAlbumProduct::tableName(), ['album_id' => 'id']);
    }

    /** @return \yii\db\ActiveQuery */
    public function getAlbumProducts()
    {

        return $this->hasMany(VkmarketAlbumProduct::class, ['id' => 'album_id']);
    }

    /**
     * @inheritdoc
     * @return \common\models\query\VkmarketAlbumQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \ignatenkovnikita\vkmarket\query\VkmarketAlbumQuery(get_called_class());
    }
}
